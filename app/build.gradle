apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion '23.0.0'
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    defaultConfig {
        applicationId "org.ei.telemedicine"
        minSdkVersion 16
        targetSdkVersion 16
        multiDexEnabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

//        debug {
//            debuggable true
//            testCoverageEnabled = true
//        }

    }
    packagingOptions {

        exclude 'LICENSE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
//            java.srcDirs = ['src/main/java', 'src/test/java/']//Need to remove for report Success
            res.srcDirs = ['src/main/res', 'src/test/resources']
        }
        test { java.srcDirs = ['src/test/java'] }
        robolectric {
            java.srcDir file('src/test/java/')
            resources.srcDir file('src/main/res')
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}
//apply plugin: 'jacoco'
//
//jacoco {
//    toolVersion = "0.7.1.201405082137"
//}
//
//def coverageSourceDirs = [
//        '../app/src/main/java'
//]
//
//task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
//    group = "Reporting"
//
//    description = "Generate Jacoco coverage reports"
//
//    classDirectories = fileTree(
//            dir: '../app/build/intermediates/classes/debug',
//            excludes: ['**/R.class',
//                       '**/R$*.class',
//                       '**/*$ViewInjector*.*',
//                       '**/BuildConfig.*',
//                       '**/Manifest*.*']
//    )
//
//    additionalSourceDirs = files(coverageSourceDirs)
//    sourceDirectories = files(coverageSourceDirs)
//    executionData = files('../app/build/jacoco/testDebug.exec')
//
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//
//}
dependencies {
    compile 'com.diogobernardino:williamchart:2.0.1'
    compile 'com.google.code.gson:gson:2.2.2'
    compile 'com.google.guava:guava:18.0'
    compile 'joda-time:joda-time:2.0'
    compile 'com.jjoe64:graphview:4.0.1'
    compile 'org.apache.httpcomponents:httpmime:4.2.3'
    compile files('libs/achartengine-1.1.0.jar')
    compile files('libs/hellocharts-library-1.5.6.jar')
    compile files('libs/CMSSXT_SDK v1.2.jar')
    compile files('libs/CONTEC08A_SDK v1.6.jar')
    compile files('libs/EarTemperature_SDK.jar')
    compile files('libs/Sonoline-S_SDK v1.0.jar')
    compile files('libs/acra-4.5.0.jar')
    compile files('libs/commons-codec-1.6.jar')
    compile files('libs/commons-io-2.1.jar')
    compile files('libs/commons-lang3-3.1.jar')
    compile files('libs/jackson-all-1.6.1.jar')
    compile files('libs/junit.jar')
    compile files('libs/mockito-all-1.9.5.jar')
    compile files('libs/prettytime-1.0.8.final.jar')
    compile files('libs/project_cms50dj_jar.jar')
    compile files('libs/rhino-1.7R4.jar')
    compile files('libs/sqlcipher-2.2.0.jar')
    compile files('libs/robotium-solo-5.4.1.jar')
    compile files('libs/autobahn-0.5.0.jar')
}

dependencies {
    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    // Set this dependency if you want to use Mockito
    testCompile 'org.mockito:mockito-core:1.10.19'
    // Set this dependency if you want to use Hamcrest matching
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
    //roboelectric
//    testCompile "org.robolectric:robolectric:3.0-SNAPSHOT"
    testCompile 'org.json:json:20140107'
    testCompile "org.robolectric:robolectric:3.0"

}

//apply plugin: 'com.getkeepsafe.dexcount'